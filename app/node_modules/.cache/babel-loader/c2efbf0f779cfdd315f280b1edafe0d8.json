{"ast":null,"code":"function isWindow(val) {\n  return val === window;\n} // get nearest scroll element\n// https://github.com/youzan/vant/issues/3823\n\n\nvar overflowScrollReg = /scroll|auto|overlay/i;\nexport function getScroller(el, root) {\n  if (root === void 0) {\n    root = window;\n  }\n\n  var node = el;\n\n  while (node && node.tagName !== 'HTML' && node.tagName !== 'BODY' && node.nodeType === 1 && node !== root) {\n    var _window$getComputedSt = window.getComputedStyle(node),\n        overflowY = _window$getComputedSt.overflowY;\n\n    if (overflowScrollReg.test(overflowY)) {\n      return node;\n    }\n\n    node = node.parentNode;\n  }\n\n  return root;\n}\nexport function getScrollTop(el) {\n  var top = 'scrollTop' in el ? el.scrollTop : el.pageYOffset; // iOS scroll bounce cause minus scrollTop\n\n  return Math.max(top, 0);\n}\nexport function setScrollTop(el, value) {\n  if ('scrollTop' in el) {\n    el.scrollTop = value;\n  } else {\n    el.scrollTo(el.scrollX, value);\n  }\n}\nexport function getRootScrollTop() {\n  return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n}\nexport function setRootScrollTop(value) {\n  setScrollTop(window, value);\n  setScrollTop(document.body, value);\n} // get distance from element top to page top or scroller top\n\nexport function getElementTop(el, scroller) {\n  if (isWindow(el)) {\n    return 0;\n  }\n\n  var scrollTop = scroller ? getScrollTop(scroller) : getRootScrollTop();\n  return el.getBoundingClientRect().top + scrollTop;\n}\nexport function getVisibleHeight(el) {\n  if (isWindow(el)) {\n    return el.innerHeight;\n  }\n\n  return el.getBoundingClientRect().height;\n}\nexport function getVisibleTop(el) {\n  if (isWindow(el)) {\n    return 0;\n  }\n\n  return el.getBoundingClientRect().top;\n}","map":{"version":3,"names":["isWindow","val","window","overflowScrollReg","getScroller","el","root","node","tagName","nodeType","_window$getComputedSt","getComputedStyle","overflowY","test","parentNode","getScrollTop","top","scrollTop","pageYOffset","Math","max","setScrollTop","value","scrollTo","scrollX","getRootScrollTop","document","documentElement","body","setRootScrollTop","getElementTop","scroller","getBoundingClientRect","getVisibleHeight","innerHeight","height","getVisibleTop"],"sources":["E:/HTML_studying/项目/vue-vant项目-谁是卧底/app/node_modules/vant/es/utils/dom/scroll.js"],"sourcesContent":["function isWindow(val) {\n  return val === window;\n} // get nearest scroll element\n// https://github.com/youzan/vant/issues/3823\n\n\nvar overflowScrollReg = /scroll|auto|overlay/i;\nexport function getScroller(el, root) {\n  if (root === void 0) {\n    root = window;\n  }\n\n  var node = el;\n\n  while (node && node.tagName !== 'HTML' && node.tagName !== 'BODY' && node.nodeType === 1 && node !== root) {\n    var _window$getComputedSt = window.getComputedStyle(node),\n        overflowY = _window$getComputedSt.overflowY;\n\n    if (overflowScrollReg.test(overflowY)) {\n      return node;\n    }\n\n    node = node.parentNode;\n  }\n\n  return root;\n}\nexport function getScrollTop(el) {\n  var top = 'scrollTop' in el ? el.scrollTop : el.pageYOffset; // iOS scroll bounce cause minus scrollTop\n\n  return Math.max(top, 0);\n}\nexport function setScrollTop(el, value) {\n  if ('scrollTop' in el) {\n    el.scrollTop = value;\n  } else {\n    el.scrollTo(el.scrollX, value);\n  }\n}\nexport function getRootScrollTop() {\n  return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n}\nexport function setRootScrollTop(value) {\n  setScrollTop(window, value);\n  setScrollTop(document.body, value);\n} // get distance from element top to page top or scroller top\n\nexport function getElementTop(el, scroller) {\n  if (isWindow(el)) {\n    return 0;\n  }\n\n  var scrollTop = scroller ? getScrollTop(scroller) : getRootScrollTop();\n  return el.getBoundingClientRect().top + scrollTop;\n}\nexport function getVisibleHeight(el) {\n  if (isWindow(el)) {\n    return el.innerHeight;\n  }\n\n  return el.getBoundingClientRect().height;\n}\nexport function getVisibleTop(el) {\n  if (isWindow(el)) {\n    return 0;\n  }\n\n  return el.getBoundingClientRect().top;\n}"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;EACrB,OAAOA,GAAG,KAAKC,MAAf;AACD,C,CAAC;AACF;;;AAGA,IAAIC,iBAAiB,GAAG,sBAAxB;AACA,OAAO,SAASC,WAAT,CAAqBC,EAArB,EAAyBC,IAAzB,EAA+B;EACpC,IAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;IACnBA,IAAI,GAAGJ,MAAP;EACD;;EAED,IAAIK,IAAI,GAAGF,EAAX;;EAEA,OAAOE,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiB,MAAzB,IAAmCD,IAAI,CAACC,OAAL,KAAiB,MAApD,IAA8DD,IAAI,CAACE,QAAL,KAAkB,CAAhF,IAAqFF,IAAI,KAAKD,IAArG,EAA2G;IACzG,IAAII,qBAAqB,GAAGR,MAAM,CAACS,gBAAP,CAAwBJ,IAAxB,CAA5B;IAAA,IACIK,SAAS,GAAGF,qBAAqB,CAACE,SADtC;;IAGA,IAAIT,iBAAiB,CAACU,IAAlB,CAAuBD,SAAvB,CAAJ,EAAuC;MACrC,OAAOL,IAAP;IACD;;IAEDA,IAAI,GAAGA,IAAI,CAACO,UAAZ;EACD;;EAED,OAAOR,IAAP;AACD;AACD,OAAO,SAASS,YAAT,CAAsBV,EAAtB,EAA0B;EAC/B,IAAIW,GAAG,GAAG,eAAeX,EAAf,GAAoBA,EAAE,CAACY,SAAvB,GAAmCZ,EAAE,CAACa,WAAhD,CAD+B,CAC8B;;EAE7D,OAAOC,IAAI,CAACC,GAAL,CAASJ,GAAT,EAAc,CAAd,CAAP;AACD;AACD,OAAO,SAASK,YAAT,CAAsBhB,EAAtB,EAA0BiB,KAA1B,EAAiC;EACtC,IAAI,eAAejB,EAAnB,EAAuB;IACrBA,EAAE,CAACY,SAAH,GAAeK,KAAf;EACD,CAFD,MAEO;IACLjB,EAAE,CAACkB,QAAH,CAAYlB,EAAE,CAACmB,OAAf,EAAwBF,KAAxB;EACD;AACF;AACD,OAAO,SAASG,gBAAT,GAA4B;EACjC,OAAOvB,MAAM,CAACgB,WAAP,IAAsBQ,QAAQ,CAACC,eAAT,CAAyBV,SAA/C,IAA4DS,QAAQ,CAACE,IAAT,CAAcX,SAA1E,IAAuF,CAA9F;AACD;AACD,OAAO,SAASY,gBAAT,CAA0BP,KAA1B,EAAiC;EACtCD,YAAY,CAACnB,MAAD,EAASoB,KAAT,CAAZ;EACAD,YAAY,CAACK,QAAQ,CAACE,IAAV,EAAgBN,KAAhB,CAAZ;AACD,C,CAAC;;AAEF,OAAO,SAASQ,aAAT,CAAuBzB,EAAvB,EAA2B0B,QAA3B,EAAqC;EAC1C,IAAI/B,QAAQ,CAACK,EAAD,CAAZ,EAAkB;IAChB,OAAO,CAAP;EACD;;EAED,IAAIY,SAAS,GAAGc,QAAQ,GAAGhB,YAAY,CAACgB,QAAD,CAAf,GAA4BN,gBAAgB,EAApE;EACA,OAAOpB,EAAE,CAAC2B,qBAAH,GAA2BhB,GAA3B,GAAiCC,SAAxC;AACD;AACD,OAAO,SAASgB,gBAAT,CAA0B5B,EAA1B,EAA8B;EACnC,IAAIL,QAAQ,CAACK,EAAD,CAAZ,EAAkB;IAChB,OAAOA,EAAE,CAAC6B,WAAV;EACD;;EAED,OAAO7B,EAAE,CAAC2B,qBAAH,GAA2BG,MAAlC;AACD;AACD,OAAO,SAASC,aAAT,CAAuB/B,EAAvB,EAA2B;EAChC,IAAIL,QAAQ,CAACK,EAAD,CAAZ,EAAkB;IAChB,OAAO,CAAP;EACD;;EAED,OAAOA,EAAE,CAAC2B,qBAAH,GAA2BhB,GAAlC;AACD"},"metadata":{},"sourceType":"module"}